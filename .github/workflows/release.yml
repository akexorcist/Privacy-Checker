name: Release

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"
      - name: Build with Gradle
        run: ./gradlew assembleDebug testDebugUnitTest
  build-release-app:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"
      - name: Prepare Keystore
        run: |
          mkdir "${GITHUB_WORKSPACE}"/keystore
          echo "${{secrets.ENCRYPTED_KEYSTORE}}" > keystore/keystore.asc
          gpg -d --passphrase "${{secrets.KEYSTORE_PASSPHRASE}}" --batch keystore/keystore.asc > ${{ secrets.SIGNING_KEY_STORE_PATH }}
      - name: Build Release APK
        env:
          SIGNING_KEY_STORE_PATH: "${{ github.workspace }}/${{ secrets.SIGNING_KEY_STORE_PATH }}"
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease
      - name: Get current app version name
        id: get-current-app-version-name
        run: |
          echo "VERSION_NAME=$(grep -oE 'versionName = "(.*?)"' app/build.gradle.kts | head -n 1 | cut -d '"' -f 2)" >> "$GITHUB_OUTPUT"
      - name: Create a release
        uses: softprops/action-gh-release@v2
        env:
          VERSION_NAME: ${{ steps.get-current-app-version-name.outputs.VERSION_NAME }}
        with:
          tag_name: "v${{ env.VERSION_NAME }}"
          files: |
            app/build/outputs/apk/release/app-release.apk
